apiVersion: apps/v1
kind: Deployment
metadata:
  name: ip
  namespace: rcaldas
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ip
  template:
    metadata:
      labels:
        app: ip
    spec:
      containers:
        - name: python
          image: python:3.10
          command: ['python', '/get_ip.py']
          ports:
            - containerPort: 8000
          livenessProbe:
            initialDelaySeconds: 3
            periodSeconds: 60
            timeoutSeconds: 5
            failureThreshold: 2
            httpGet:
              path: /
              port: 8000
          resources:
            requests:
              memory: "10Mi"
              cpu: "10m"
            limits:
              memory: "20Mi"
              cpu: "50m"
          volumeMounts:
            - name: app
              mountPath: /get_ip.py
              subPath: get_ip.py
      volumes:
        - name: app
          configMap:
            name: ip
            items:
              - key: get-ip
                path: get_ip.py
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: owner
                operator: In
                values:
                - rcaldas
            weight: 8
          - preference:
              matchExpressions:
              - key: alt
                operator: In
                values:
                - rcaldas
            weight: 4
          - preference:
              matchExpressions:
              - key: env
                operator: In
                values:
                - dev
            weight: 2
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app: ip
---
apiVersion: v1
kind: Service
metadata:
  name: ip
  namespace: rcaldas
spec:
  ports:
    - port: 8000
      protocol: TCP
  selector:
    app: ip
